<%- include('../partials/admin/header.ejs') %>
<header>
    <%- include('../partials/admin/navbar.ejs') %>
</header>
<div class="row">
    <%- include('../partials/admin/sidebar.ejs') %>
    <div class="cover">
        <div class="cover-head">
            <h2>Orders</h2>
            <div class="row">
                <button class="state-button processing" onclick="filter_orders('processing')">Processing</button>
                <button class="state-button shipped" onclick="filter_orders('shipped')">Shipped</button>
                <button class="state-button delivered" onclick="filter_orders('delivered')">Delivered</button>
                <button class="state-button cancelled" onclick="filter_orders('cancelled')">Cancelled</button>
                <button class="state-button" onclick="filter_orders('returned')">Returned</button>
            </div>
        </div>

        <table>
            <thead>
                <tr>
                    <th>Order</th>
                    <th>Customer</th>
                    <th>Date</th>
                    <th>Total</th>
                    <th>Status</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="user-table">
            </tbody>
        </table>

        <ul class="pagination" id="pagination">
        </ul>
    </div>
</div>
<script>
    const filter_orders = (state) => {
        let url = new URL(window.location.href);
        if (url.searchParams.get('page') != null) {
            url.searchParams.delete('page');
            fetch_order_data(1, "");
        }
        if (url.searchParams.get('status') == state) {
            url.searchParams.delete('status');
            fetch_order_data(1, "");
        } else {
            url.searchParams.set('status', state);
            fetch_order_data(1, state);
        }
        window.history.replaceState({}, '', url);
    };

    const fetch_order_data = async (page, state) => {
        const response = await fetch(`/admin/orders`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: new URLSearchParams({
                page,
                status: state,
            }),
        });

        const data = await response.json();
        render_orders(data);
        createPagination(data.totalPages, data.currentPage);
    };

    const render_orders = (data) => {
        const table = document.getElementById('user-table');
        table.innerHTML = '';
        if (data && data.orders && data.orders.length > 0) {
            data.orders.forEach((order) => {
                table.innerHTML += `
                    <tr>
                        <td style="display: flex; flex-direction: row; align-items: center; gap: 10px;">
                            <img src="/images/${order.image}" style="width: 44px; height: 44px; border-radius: 6px;" alt="${order.name} logo">
                            <span style="max-width: 250px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">${order.name}</span>
                        </td>
                        <td style="max-width: 120px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                            ${order.user_id.first_name + " " + order.user_id.last_name}
                        </td>
                        <td>${formatDate(new Date(order.createdAt))}</td>
                        <td>&#8377;${order.price}</td>
                        <td><span class="state-button ${order.status} label">${order.status.charAt(0).toUpperCase() + order.status.slice(1)}</span></td>
                        <td>
                            <a class="action-btn action-view" href="/admin/order/${order._id}">View</button>
                        </td>
                    </tr>`;
            });
        } else {
            table.innerHTML = '<tr><td colspan="6">No orders found.</td></tr>';
        }
    }

    function createPagination(totalPages, currentPage) {
        const pagination = document.getElementById('pagination');
        pagination.innerHTML = '';

        const prevLi = document.createElement('li');
        prevLi.textContent = '<';
        prevLi.className = currentPage === 1 ? 'disabled' : '';
        prevLi.onclick = () => paginate_orders(currentPage - 1, totalPages, fetch_order_data);
        pagination.appendChild(prevLi);

        for (let i = 1; i <= totalPages; i++) {
            const pageLi = document.createElement('li');
            pageLi.textContent = i;
            pageLi.className = i === currentPage ? 'active' : '';
            pageLi.onclick = () => paginate_orders(i, totalPages, fetch_order_data);
            pagination.appendChild(pageLi);
        }

        const nextLi = document.createElement('li');
        nextLi.textContent = '>';
        nextLi.className = currentPage === totalPages ? 'disabled' : '';
        nextLi.onclick = () => paginate_orders(currentPage + 1, totalPages, fetch_order_data);
        pagination.appendChild(nextLi);
    }

    function paginate_orders(page, total, func) {
        if (page < 1 || page > total) return;
        let url = new URL(window.location.href);

        func(page, url.searchParams.get('status'));
    }

    fetch_order_data(1, "");
</script>
<%- include('../partials/admin/footer.ejs') %>